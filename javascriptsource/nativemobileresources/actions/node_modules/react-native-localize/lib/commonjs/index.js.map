{"version":3,"sources":["index.js"],"names":["logUnknownEvent","type","console","error","getPartialTag","languageCode","scriptCode","addEventListener","handler","handlers","has","add","removeEventListener","delete","findBestAvailableLanguage","languageTags","locales","i","length","currentLocale","languageTag","isRTL","includes","partial","next"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AAiCA,SAASA,eAAT,CAAyBC,IAAzB,EAAuC;AACrCC,EAAAA,OAAO,CAACC,KAAR,YAAmBF,IAAnB;AACD;;AACD,SAASG,aAAT,CAAuB;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAvB,EAA6D;AAC3D,SAAOD,YAAY,IAAIC,UAAU,GAAG,MAAMA,UAAT,GAAsB,EAApC,CAAnB;AACD;;AAEM,SAASC,gBAAT,CACLN,IADK,EAELO,OAFK,EAGC;AACN,MAAIP,IAAI,KAAK,QAAb,EAAuB;AACrBD,IAAAA,eAAe,CAACC,IAAD,CAAf;AACD,GAFD,MAEO,IAAI,CAACQ,iBAASC,GAAT,CAAaF,OAAb,CAAL,EAA4B;AACjCC,qBAASE,GAAT,CAAaH,OAAb;AACD;AACF;;AAEM,SAASI,mBAAT,CACLX,IADK,EAELO,OAFK,EAGC;AACN,MAAIP,IAAI,KAAK,QAAb,EAAuB;AACrBD,IAAAA,eAAe,CAACC,IAAD,CAAf;AACD,GAFD,MAEO,IAAIQ,iBAASC,GAAT,CAAaF,OAAb,CAAJ,EAA2B;AAChCC,qBAASI,MAAT,CAAgBL,OAAhB;AACD;AACF;;AAEM,SAASM,yBAAT,CACLC,YADK,EAEyD;AAC9D,QAAMC,OAAO,GAAG,yBAAhB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,UAAME,aAAa,GAAGH,OAAO,CAACC,CAAD,CAA7B;AACA,UAAM;AAAEG,MAAAA,WAAF;AAAef,MAAAA,YAAf;AAA6BgB,MAAAA;AAA7B,QAAuCF,aAA7C;;AAEA,QAAIJ,YAAY,CAACO,QAAb,CAAsBF,WAAtB,CAAJ,EAAwC;AACtC,aAAO;AAAEA,QAAAA,WAAF;AAAeC,QAAAA;AAAf,OAAP;AACD;;AAED,UAAME,OAAO,GAAGnB,aAAa,CAACe,aAAD,CAA7B;AACA,UAAMK,IAAI,GAAGR,OAAO,CAACC,CAAC,GAAG,CAAL,CAApB;;AAEA,QACE,CAAC,CAACO,IAAD,IAASD,OAAO,KAAKnB,aAAa,CAACoB,IAAD,CAAnC,KACAT,YAAY,CAACO,QAAb,CAAsBC,OAAtB,CAFF,EAGE;AACA,aAAO;AAAEH,QAAAA,WAAW,EAAEG,OAAf;AAAwBF,QAAAA;AAAxB,OAAP;AACD;;AAED,QACE,CAAC,CAACG,IAAD,IAASnB,YAAY,KAAKmB,IAAI,CAACnB,YAAhC,KACAU,YAAY,CAACO,QAAb,CAAsBjB,YAAtB,CAFF,EAGE;AACA,aAAO;AAAEe,QAAAA,WAAW,EAAEf,YAAf;AAA6BgB,QAAAA;AAA7B,OAAP;AACD;AACF;AACF","sourcesContent":["// @flow\n\nimport { getLocales, handlers } from \"./module\";\n\nimport type {\n  Calendar,\n  Locale,\n  LocalizationEvent,\n  NumberFormatSettings,\n  Option,\n  TemperatureUnit,\n} from \"./types\";\n\nexport type {\n  Calendar,\n  Locale,\n  LocalizationEvent,\n  NumberFormatSettings,\n  TemperatureUnit,\n} from \"./types\";\n\nexport {\n  getCalendar,\n  getCountry,\n  getCurrencies,\n  getLocales,\n  getNumberFormatSettings,\n  getTemperatureUnit,\n  getTimeZone,\n  uses24HourClock,\n  usesMetricSystem,\n  usesAutoDateAndTime,\n  usesAutoTimeZone,\n} from \"./module\";\n\nfunction logUnknownEvent(type: string) {\n  console.error(`\\`${type}\\` is not a valid react-native-localize event`);\n}\nfunction getPartialTag({ languageCode, scriptCode }: Locale) {\n  return languageCode + (scriptCode ? \"-\" + scriptCode : \"\");\n}\n\nexport function addEventListener(\n  type: LocalizationEvent,\n  handler: Function,\n): void {\n  if (type !== \"change\") {\n    logUnknownEvent(type);\n  } else if (!handlers.has(handler)) {\n    handlers.add(handler);\n  }\n}\n\nexport function removeEventListener(\n  type: LocalizationEvent,\n  handler: Function,\n): void {\n  if (type !== \"change\") {\n    logUnknownEvent(type);\n  } else if (handlers.has(handler)) {\n    handlers.delete(handler);\n  }\n}\n\nexport function findBestAvailableLanguage(\n  languageTags: string[],\n): {| languageTag: string, isRTL: boolean |} | typeof undefined {\n  const locales = getLocales();\n\n  for (let i = 0; i < locales.length; i++) {\n    const currentLocale = locales[i];\n    const { languageTag, languageCode, isRTL } = currentLocale;\n\n    if (languageTags.includes(languageTag)) {\n      return { languageTag, isRTL };\n    }\n\n    const partial = getPartialTag(currentLocale);\n    const next = locales[i + 1];\n\n    if (\n      (!next || partial !== getPartialTag(next)) &&\n      languageTags.includes(partial)\n    ) {\n      return { languageTag: partial, isRTL };\n    }\n\n    if (\n      (!next || languageCode !== next.languageCode) &&\n      languageTags.includes(languageCode)\n    ) {\n      return { languageTag: languageCode, isRTL };\n    }\n  }\n}\n"]}