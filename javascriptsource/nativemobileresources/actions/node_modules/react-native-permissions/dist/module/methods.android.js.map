{"version":3,"sources":["methods.android.ts"],"names":["Alert","NativeModules","checkLocationAccuracy","openLimitedPhotoLibraryPicker","requestLocationAccuracy","uniq","NativeModule","RNPermissions","openSettings","check","permission","checkPermission","request","rationale","shouldShowRationale","shouldShowRequestPermissionRationale","title","message","buttonPositive","buttonNegative","buttonNeutral","Promise","resolve","buttons","onPress","push","text","requestPermission","alert","cancelable","checkNotifications","checkMultiple","permissions","dedup","checkMultiplePermissions","requestMultiple","requestMultiplePermissions","methods","requestNotifications"],"mappings":"AAAA,SAAQA,KAAR,EAA4BC,aAA5B,QAAgD,cAAhD;AAGA,SACEC,qBADF,EAEEC,6BAFF,EAGEC,uBAHF,QAIO,8BAJP;AAKA,SAAQC,IAAR,QAAmB,SAAnB;AAEA,MAAMC,YAaL,GAAGL,aAAa,CAACM,aAblB;;AAeA,eAAeC,YAAf,GAA6C;AAC3C,QAAMF,YAAY,CAACE,YAAb,EAAN;AACD;;AAED,SAASC,KAAT,CAAeC,UAAf,EAAkE;AAChE,SAAOJ,YAAY,CAACK,eAAb,CAA6BD,UAA7B,CAAP;AACD;;AAED,eAAeE,OAAf,CAAuBF,UAAvB,EAA+CG,SAA/C,EAAiG;AAC/F,MAAIA,SAAJ,EAAe;AACb,UAAMC,mBAAmB,GAAG,MAAMR,YAAY,CAACS,oCAAb,CAAkDL,UAAlD,CAAlC;;AAEA,QAAII,mBAAJ,EAAyB;AACvB,YAAM;AAACE,QAAAA,KAAD;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA,cAAjB;AAAiCC,QAAAA,cAAjC;AAAiDC,QAAAA;AAAjD,UAAkEP,SAAxE;AAEA,aAAO,IAAIQ,OAAJ,CAAaC,OAAD,IAAa;AAC9B,cAAMC,OAAsB,GAAG,EAA/B;;AAEA,YAAIJ,cAAJ,EAAoB;AAClB,gBAAMK,OAAO,GAAG,MAAMF,OAAO,CAAChB,YAAY,CAACK,eAAb,CAA6BD,UAA7B,CAAD,CAA7B;;AACAU,UAAAA,aAAa,IAAIG,OAAO,CAACE,IAAR,CAAa;AAACC,YAAAA,IAAI,EAAEN,aAAP;AAAsBI,YAAAA;AAAtB,WAAb,CAAjB;AACAD,UAAAA,OAAO,CAACE,IAAR,CAAa;AAACC,YAAAA,IAAI,EAAEP,cAAP;AAAuBK,YAAAA;AAAvB,WAAb;AACD;;AAEDD,QAAAA,OAAO,CAACE,IAAR,CAAa;AACXC,UAAAA,IAAI,EAAER,cADK;AAEXM,UAAAA,OAAO,EAAE,MAAMF,OAAO,CAAChB,YAAY,CAACqB,iBAAb,CAA+BjB,UAA/B,CAAD;AAFX,SAAb;AAKAV,QAAAA,KAAK,CAAC4B,KAAN,CAAYZ,KAAZ,EAAmBC,OAAnB,EAA4BM,OAA5B,EAAqC;AAACM,UAAAA,UAAU,EAAE;AAAb,SAArC;AACD,OAfM,CAAP;AAgBD;AACF;;AAED,SAAOvB,YAAY,CAACqB,iBAAb,CAA+BjB,UAA/B,CAAP;AACD;;AAED,SAASoB,kBAAT,GAA8D;AAC5D,SAAOxB,YAAY,CAACwB,kBAAb,EAAP;AACD;;AAED,SAASC,aAAT,CACEC,WADF,EAEgD;AAC9C,QAAMC,KAAK,GAAG5B,IAAI,CAAC2B,WAAD,CAAlB;AACA,SAAO1B,YAAY,CAAC4B,wBAAb,CAAsCD,KAAtC,CAAP;AACD;;AAED,SAASE,eAAT,CACEH,WADF,EAEgD;AAC9C,QAAMC,KAAK,GAAG5B,IAAI,CAAC2B,WAAD,CAAlB;AACA,SAAO1B,YAAY,CAAC8B,0BAAb,CAAwCH,KAAxC,CAAP;AACD;;AAED,OAAO,MAAMI,OAAiB,GAAG;AAC/B5B,EAAAA,KAD+B;AAE/BP,EAAAA,qBAF+B;AAG/B6B,EAAAA,aAH+B;AAI/BD,EAAAA,kBAJ+B;AAK/B3B,EAAAA,6BAL+B;AAM/BK,EAAAA,YAN+B;AAO/BI,EAAAA,OAP+B;AAQ/BR,EAAAA,uBAR+B;AAS/B+B,EAAAA,eAT+B;AAU/BG,EAAAA,oBAAoB,EAAER;AAVS,CAA1B","sourcesContent":["import {Alert, AlertButton, NativeModules} from 'react-native';\nimport type {Contract} from './contract';\nimport type {NotificationsResponse, Permission, PermissionStatus, Rationale} from './types';\nimport {\n  checkLocationAccuracy,\n  openLimitedPhotoLibraryPicker,\n  requestLocationAccuracy,\n} from './unsupportedPlatformMethods';\nimport {uniq} from './utils';\n\nconst NativeModule: {\n  checkPermission: (permission: Permission) => Promise<PermissionStatus>;\n  requestPermission: (permission: Permission) => Promise<PermissionStatus>;\n  checkNotifications: () => Promise<NotificationsResponse>;\n  openSettings: () => Promise<true>;\n  shouldShowRequestPermissionRationale: (permission: Permission) => Promise<boolean>;\n\n  checkMultiplePermissions: (\n    permissions: Permission[],\n  ) => Promise<Record<Permission, PermissionStatus>>;\n  requestMultiplePermissions: (\n    permissions: Permission[],\n  ) => Promise<Record<Permission, PermissionStatus>>;\n} = NativeModules.RNPermissions;\n\nasync function openSettings(): Promise<void> {\n  await NativeModule.openSettings();\n}\n\nfunction check(permission: Permission): Promise<PermissionStatus> {\n  return NativeModule.checkPermission(permission);\n}\n\nasync function request(permission: Permission, rationale?: Rationale): Promise<PermissionStatus> {\n  if (rationale) {\n    const shouldShowRationale = await NativeModule.shouldShowRequestPermissionRationale(permission);\n\n    if (shouldShowRationale) {\n      const {title, message, buttonPositive, buttonNegative, buttonNeutral} = rationale;\n\n      return new Promise((resolve) => {\n        const buttons: AlertButton[] = [];\n\n        if (buttonNegative) {\n          const onPress = () => resolve(NativeModule.checkPermission(permission));\n          buttonNeutral && buttons.push({text: buttonNeutral, onPress});\n          buttons.push({text: buttonNegative, onPress});\n        }\n\n        buttons.push({\n          text: buttonPositive,\n          onPress: () => resolve(NativeModule.requestPermission(permission)),\n        });\n\n        Alert.alert(title, message, buttons, {cancelable: false});\n      });\n    }\n  }\n\n  return NativeModule.requestPermission(permission);\n}\n\nfunction checkNotifications(): Promise<NotificationsResponse> {\n  return NativeModule.checkNotifications();\n}\n\nfunction checkMultiple<P extends Permission[]>(\n  permissions: P,\n): Promise<Record<P[number], PermissionStatus>> {\n  const dedup = uniq(permissions);\n  return NativeModule.checkMultiplePermissions(dedup);\n}\n\nfunction requestMultiple<P extends Permission[]>(\n  permissions: P,\n): Promise<Record<P[number], PermissionStatus>> {\n  const dedup = uniq(permissions);\n  return NativeModule.requestMultiplePermissions(dedup);\n}\n\nexport const methods: Contract = {\n  check,\n  checkLocationAccuracy,\n  checkMultiple,\n  checkNotifications,\n  openLimitedPhotoLibraryPicker,\n  openSettings,\n  request,\n  requestLocationAccuracy,\n  requestMultiple,\n  requestNotifications: checkNotifications,\n};\n"]}