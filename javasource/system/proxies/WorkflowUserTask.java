// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package system.proxies;

public class WorkflowUserTask extends system.proxies.WorkflowTaskInstance
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "System.WorkflowUserTask";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		TaskName("TaskName"),
		TaskDescription("TaskDescription"),
		DueDate("DueDate"),
		Outcome("Outcome"),
		StartTime("StartTime"),
		EndTime("EndTime"),
		State("State"),
		Reason("Reason"),
		WorkflowUserTask_TargetUsers("System.WorkflowUserTask_TargetUsers"),
		WorkflowUserTask_Assignee("System.WorkflowUserTask_Assignee"),
		TaskInstance_WorkflowInstance("System.TaskInstance_WorkflowInstance"),
		TaskInstance_TaskDefinition("System.TaskInstance_TaskDefinition");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public WorkflowUserTask(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "System.WorkflowUserTask"));
	}

	protected WorkflowUserTask(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject workflowUserTaskMendixObject)
	{
		super(context, workflowUserTaskMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("System.WorkflowUserTask", workflowUserTaskMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a System.WorkflowUserTask");
	}

	/**
	 * @deprecated Use 'WorkflowUserTask.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static system.proxies.WorkflowUserTask initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return system.proxies.WorkflowUserTask.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static system.proxies.WorkflowUserTask initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new system.proxies.WorkflowUserTask(context, mendixObject);
	}

	public static system.proxies.WorkflowUserTask load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return system.proxies.WorkflowUserTask.initialize(context, mendixObject);
	}

	public static java.util.List<system.proxies.WorkflowUserTask> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<system.proxies.WorkflowUserTask> result = new java.util.ArrayList<system.proxies.WorkflowUserTask>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//System.WorkflowUserTask" + xpathConstraint))
			result.add(system.proxies.WorkflowUserTask.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of TaskName
	 */
	public final java.lang.String getTaskName()
	{
		return getTaskName(getContext());
	}

	/**
	 * @param context
	 * @return value of TaskName
	 */
	public final java.lang.String getTaskName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.TaskName.toString());
	}

	/**
	 * Set value of TaskName
	 * @param taskname
	 */
	public final void setTaskName(java.lang.String taskname)
	{
		setTaskName(getContext(), taskname);
	}

	/**
	 * Set value of TaskName
	 * @param context
	 * @param taskname
	 */
	public final void setTaskName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String taskname)
	{
		getMendixObject().setValue(context, MemberNames.TaskName.toString(), taskname);
	}

	/**
	 * @return value of TaskDescription
	 */
	public final java.lang.String getTaskDescription()
	{
		return getTaskDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of TaskDescription
	 */
	public final java.lang.String getTaskDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.TaskDescription.toString());
	}

	/**
	 * Set value of TaskDescription
	 * @param taskdescription
	 */
	public final void setTaskDescription(java.lang.String taskdescription)
	{
		setTaskDescription(getContext(), taskdescription);
	}

	/**
	 * Set value of TaskDescription
	 * @param context
	 * @param taskdescription
	 */
	public final void setTaskDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String taskdescription)
	{
		getMendixObject().setValue(context, MemberNames.TaskDescription.toString(), taskdescription);
	}

	/**
	 * @return value of DueDate
	 */
	public final java.util.Date getDueDate()
	{
		return getDueDate(getContext());
	}

	/**
	 * @param context
	 * @return value of DueDate
	 */
	public final java.util.Date getDueDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DueDate.toString());
	}

	/**
	 * Set value of DueDate
	 * @param duedate
	 */
	public final void setDueDate(java.util.Date duedate)
	{
		setDueDate(getContext(), duedate);
	}

	/**
	 * Set value of DueDate
	 * @param context
	 * @param duedate
	 */
	public final void setDueDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date duedate)
	{
		getMendixObject().setValue(context, MemberNames.DueDate.toString(), duedate);
	}

	/**
	 * @return value of WorkflowUserTask_TargetUsers
	 */
	public final java.util.List<system.proxies.User> getWorkflowUserTask_TargetUsers() throws com.mendix.core.CoreException
	{
		return getWorkflowUserTask_TargetUsers(getContext());
	}

	/**
	 * @param context
	 * @return value of WorkflowUserTask_TargetUsers
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<system.proxies.User> getWorkflowUserTask_TargetUsers(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<system.proxies.User> result = new java.util.ArrayList<system.proxies.User>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.WorkflowUserTask_TargetUsers.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(system.proxies.User.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of WorkflowUserTask_TargetUsers
	 * @param workflowusertask_targetusers
	 */
	public final void setWorkflowUserTask_TargetUsers(java.util.List<system.proxies.User> workflowusertask_targetusers)
	{
		setWorkflowUserTask_TargetUsers(getContext(), workflowusertask_targetusers);
	}

	/**
	 * Set value of WorkflowUserTask_TargetUsers
	 * @param context
	 * @param workflowusertask_targetusers
	 */
	public final void setWorkflowUserTask_TargetUsers(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<system.proxies.User> workflowusertask_targetusers)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (system.proxies.User proxyObject : workflowusertask_targetusers)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.WorkflowUserTask_TargetUsers.toString(), identifiers);
	}

	/**
	 * @return value of WorkflowUserTask_Assignee
	 */
	public final system.proxies.User getWorkflowUserTask_Assignee() throws com.mendix.core.CoreException
	{
		return getWorkflowUserTask_Assignee(getContext());
	}

	/**
	 * @param context
	 * @return value of WorkflowUserTask_Assignee
	 */
	public final system.proxies.User getWorkflowUserTask_Assignee(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.User result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.WorkflowUserTask_Assignee.toString());
		if (identifier != null)
			result = system.proxies.User.load(context, identifier);
		return result;
	}

	/**
	 * Set value of WorkflowUserTask_Assignee
	 * @param workflowusertask_assignee
	 */
	public final void setWorkflowUserTask_Assignee(system.proxies.User workflowusertask_assignee)
	{
		setWorkflowUserTask_Assignee(getContext(), workflowusertask_assignee);
	}

	/**
	 * Set value of WorkflowUserTask_Assignee
	 * @param context
	 * @param workflowusertask_assignee
	 */
	public final void setWorkflowUserTask_Assignee(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.User workflowusertask_assignee)
	{
		if (workflowusertask_assignee == null)
			getMendixObject().setValue(context, MemberNames.WorkflowUserTask_Assignee.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.WorkflowUserTask_Assignee.toString(), workflowusertask_assignee.getMendixObject().getId());
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final system.proxies.WorkflowUserTask that = (system.proxies.WorkflowUserTask) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "System.WorkflowUserTask";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Override
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
