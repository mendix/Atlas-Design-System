// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package system.proxies;

public class WorkflowDefinition
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject workflowDefinitionMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "System.WorkflowDefinition";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		Title("Title"),
		IsObsolete("IsObsolete"),
		WorkflowDefinition_CurrentWorkflowVersion("System.WorkflowDefinition_CurrentWorkflowVersion");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public WorkflowDefinition(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "System.WorkflowDefinition"));
	}

	protected WorkflowDefinition(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject workflowDefinitionMendixObject)
	{
		if (workflowDefinitionMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("System.WorkflowDefinition", workflowDefinitionMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a System.WorkflowDefinition");

		this.workflowDefinitionMendixObject = workflowDefinitionMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'WorkflowDefinition.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static system.proxies.WorkflowDefinition initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return system.proxies.WorkflowDefinition.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static system.proxies.WorkflowDefinition initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new system.proxies.WorkflowDefinition(context, mendixObject);
	}

	public static system.proxies.WorkflowDefinition load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return system.proxies.WorkflowDefinition.initialize(context, mendixObject);
	}

	public static java.util.List<system.proxies.WorkflowDefinition> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<system.proxies.WorkflowDefinition> result = new java.util.ArrayList<system.proxies.WorkflowDefinition>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//System.WorkflowDefinition" + xpathConstraint))
			result.add(system.proxies.WorkflowDefinition.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of Title
	 */
	public final java.lang.String getTitle()
	{
		return getTitle(getContext());
	}

	/**
	 * @param context
	 * @return value of Title
	 */
	public final java.lang.String getTitle(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Title.toString());
	}

	/**
	 * Set value of Title
	 * @param title
	 */
	public final void setTitle(java.lang.String title)
	{
		setTitle(getContext(), title);
	}

	/**
	 * Set value of Title
	 * @param context
	 * @param title
	 */
	public final void setTitle(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String title)
	{
		getMendixObject().setValue(context, MemberNames.Title.toString(), title);
	}

	/**
	 * @return value of IsObsolete
	 */
	public final java.lang.Boolean getIsObsolete()
	{
		return getIsObsolete(getContext());
	}

	/**
	 * @param context
	 * @return value of IsObsolete
	 */
	public final java.lang.Boolean getIsObsolete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsObsolete.toString());
	}

	/**
	 * Set value of IsObsolete
	 * @param isobsolete
	 */
	public final void setIsObsolete(java.lang.Boolean isobsolete)
	{
		setIsObsolete(getContext(), isobsolete);
	}

	/**
	 * Set value of IsObsolete
	 * @param context
	 * @param isobsolete
	 */
	public final void setIsObsolete(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isobsolete)
	{
		getMendixObject().setValue(context, MemberNames.IsObsolete.toString(), isobsolete);
	}

	/**
	 * @return value of WorkflowDefinition_CurrentWorkflowVersion
	 */
	public final system.proxies.WorkflowVersion getWorkflowDefinition_CurrentWorkflowVersion() throws com.mendix.core.CoreException
	{
		return getWorkflowDefinition_CurrentWorkflowVersion(getContext());
	}

	/**
	 * @param context
	 * @return value of WorkflowDefinition_CurrentWorkflowVersion
	 */
	public final system.proxies.WorkflowVersion getWorkflowDefinition_CurrentWorkflowVersion(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.WorkflowVersion result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.WorkflowDefinition_CurrentWorkflowVersion.toString());
		if (identifier != null)
			result = system.proxies.WorkflowVersion.load(context, identifier);
		return result;
	}

	/**
	 * Set value of WorkflowDefinition_CurrentWorkflowVersion
	 * @param workflowdefinition_currentworkflowversion
	 */
	public final void setWorkflowDefinition_CurrentWorkflowVersion(system.proxies.WorkflowVersion workflowdefinition_currentworkflowversion)
	{
		setWorkflowDefinition_CurrentWorkflowVersion(getContext(), workflowdefinition_currentworkflowversion);
	}

	/**
	 * Set value of WorkflowDefinition_CurrentWorkflowVersion
	 * @param context
	 * @param workflowdefinition_currentworkflowversion
	 */
	public final void setWorkflowDefinition_CurrentWorkflowVersion(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.WorkflowVersion workflowdefinition_currentworkflowversion)
	{
		if (workflowdefinition_currentworkflowversion == null)
			getMendixObject().setValue(context, MemberNames.WorkflowDefinition_CurrentWorkflowVersion.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.WorkflowDefinition_CurrentWorkflowVersion.toString(), workflowdefinition_currentworkflowversion.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return workflowDefinitionMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final system.proxies.WorkflowDefinition that = (system.proxies.WorkflowDefinition) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "System.WorkflowDefinition";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
