// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package atlas_designsystem.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	/**
	 * @deprecated
	 * The default constructor of the Microflows class should not be used.
	 * Use the static microflow invocation methods instead.
	 */
	@java.lang.Deprecated(since = "9.12", forRemoval = true)
	public Microflows() {}

	// These are the microflows for the Atlas_DesignSystem module
	public static void aSu_CleanTakePictureEntities(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Atlas_DesignSystem.ASu_CleanTakePictureEntities").withParams(params).execute(context);
	}
	public static void aSu_RestockAtlasGenericObjectEntities(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Atlas_DesignSystem.ASu_RestockAtlasGenericObjectEntities").withParams(params).execute(context);
	}
	public static void aSu_RestockAtlasLocationDateEntities(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Atlas_DesignSystem.ASu_RestockAtlasLocationDateEntities").withParams(params).execute(context);
	}
	public static void aSu_RestockAtlasPeopleEntities(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Atlas_DesignSystem.ASu_RestockAtlasPeopleEntities").withParams(params).execute(context);
	}
	public static void aSu_RestockAtlasStatisticsEntities(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Atlas_DesignSystem.ASu_RestockAtlasStatisticsEntities").withParams(params).execute(context);
	}
	public static void aSu_RestockTaskInboxEntities(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Atlas_DesignSystem.ASu_RestockTaskInboxEntities").withParams(params).execute(context);
	}
	public static boolean aSu_RunModuleSpecificMFs(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Boolean) Core.microflowCall("Atlas_DesignSystem.ASu_RunModuleSpecificMFs").withParams(params).execute(context);
	}
	public static java.util.List<atlas_designsystem.proxies.ChartsDataMap> dS_ChartData_StaticSet1(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> objs = Core.microflowCall("Atlas_DesignSystem.DS_ChartData_StaticSet1").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> atlas_designsystem.proxies.ChartsDataMap.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static java.util.List<atlas_designsystem.proxies.ChartsDataMap> dS_ChartData_StaticSet2(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> objs = Core.microflowCall("Atlas_DesignSystem.DS_ChartData_StaticSet2").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> atlas_designsystem.proxies.ChartsDataMap.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static atlas_ui_data.proxies.AtlasGenericObject dS_EmptyRating(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Atlas_DesignSystem.DS_EmptyRating").withParams(params).execute(context);
		return result == null ? null : atlas_ui_data.proxies.AtlasGenericObject.initialize(context, result);
	}
	public static atlas_ui_data.proxies.AtlasGenericObject dS_MaxRating(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Atlas_DesignSystem.DS_MaxRating").withParams(params).execute(context);
		return result == null ? null : atlas_ui_data.proxies.AtlasGenericObject.initialize(context, result);
	}
	public static java.util.List<atlas_designsystem.proxies.Product> dS_ProductList(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> objs = Core.microflowCall("Atlas_DesignSystem.DS_ProductList").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> atlas_designsystem.proxies.Product.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static atlas_designsystem.proxies.RangeSlider dS_RangeSlider(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Atlas_DesignSystem.DS_RangeSlider").withParams(params).execute(context);
		return result == null ? null : atlas_designsystem.proxies.RangeSlider.initialize(context, result);
	}
	public static atlas_designsystem.proxies.Slider dS_Slider(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Atlas_DesignSystem.DS_Slider").withParams(params).execute(context);
		return result == null ? null : atlas_designsystem.proxies.Slider.initialize(context, result);
	}
	public static java.util.List<atlas_ui_data.proxies.AtlasGenericObject> dS_Treenode(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> objs = Core.microflowCall("Atlas_DesignSystem.DS_Treenode").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> atlas_ui_data.proxies.AtlasGenericObject.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static java.util.List<atlas_designsystem.proxies.ChartsDataMap> mF_DataString_to_ChartsDataMapList(IContext context, java.lang.String _dataString)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DataString", _dataString);
		java.util.List<IMendixObject> objs = Core.microflowCall("Atlas_DesignSystem.MF_DataString_to_ChartsDataMapList").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> atlas_designsystem.proxies.ChartsDataMap.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
}
